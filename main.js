(()=>{"use strict";var n={430:(n,r,e)=>{e.d(r,{A:()=>s});var t=e(354),a=e.n(t),o=e(314),i=e.n(o)()(a());i.push([n.id,"html, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video, button {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}","",{version:3,sources:["webpack://./src/reset.css"],names:[],mappings:"AAAA;;;;;;;;;;;;;CAaC,SAAS;CACT,UAAU;CACV,SAAS;CACT,eAAe;CACf,aAAa;CACb,wBAAwB;AACzB;AACA,gDAAgD;AAChD;;CAEC,cAAc;AACf;AACA;CACC,cAAc;AACf;AACA;CACC,gBAAgB;AACjB;AACA;CACC,YAAY;AACb;AACA;;CAEC,WAAW;CACX,aAAa;AACd;AACA;CACC,yBAAyB;CACzB,iBAAiB;AAClB",sourcesContent:["html, body, div, span, applet, object, iframe,\r\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\r\na, abbr, acronym, address, big, cite, code,\r\ndel, dfn, em, img, ins, kbd, q, s, samp,\r\nsmall, strike, strong, sub, sup, tt, var,\r\nb, u, i, center,\r\ndl, dt, dd, ol, ul, li,\r\nfieldset, form, label, legend,\r\ntable, caption, tbody, tfoot, thead, tr, th, td,\r\narticle, aside, canvas, details, embed, \r\nfigure, figcaption, footer, header, hgroup, \r\nmenu, nav, output, ruby, section, summary,\r\ntime, mark, audio, video, button {\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n\tborder: 0;\r\n\tfont-size: 100%;\r\n\tfont: inherit;\r\n\tvertical-align: baseline;\r\n}\r\n/* HTML5 display-role reset for older browsers */\r\narticle, aside, details, figcaption, figure, \r\nfooter, header, hgroup, menu, nav, section {\r\n\tdisplay: block;\r\n}\r\nbody {\r\n\tline-height: 1;\r\n}\r\nol, ul {\r\n\tlist-style: none;\r\n}\r\nblockquote, q {\r\n\tquotes: none;\r\n}\r\nblockquote:before, blockquote:after,\r\nq:before, q:after {\r\n\tcontent: '';\r\n\tcontent: none;\r\n}\r\ntable {\r\n\tborder-collapse: collapse;\r\n\tborder-spacing: 0;\r\n}"],sourceRoot:""}]);const s=i},365:(n,r,e)=>{e.d(r,{A:()=>m});var t=e(354),a=e.n(t),o=e(314),i=e.n(o),s=e(417),d=e.n(s),l=new URL(e(461),e.b),c=new URL(e(625),e.b),A=new URL(e(530),e.b),p=i()(a()),h=d()(l),u=d()(c),g=d()(A);p.push([n.id,`* {\n  box-sizing: border-box;\n}\n\nbody {\n  font-family: "Roboto Mono", monospace;\n  font-optical-sizing: auto;\n  font-weight: 500;\n  font-style: normal;\n\n  display: flex;\n  flex-direction: column;\n  /* align-items: center; */\n  justify-content: center;\n  /* margin: -3vw; */\n  /* height: 100vh; */\n\n  position: relative;\n}\n\n.header {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 2rem;\n  font-size: calc(2.5rem + 1vw);\n}\n\n.game-container {\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  flex-wrap: wrap;\n  /* margin-top: 20vh; */\n  /* width: 70vw; */\n}\n\n.player-container,\n.computer-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  position: relative;\n  /* margin: 2rem; */\n}\n\n.player-container > h4,\n.computer-container > h4 {\n  padding: 1rem;\n  font-size: 1.5rem;\n}\n\n.board {\n  display: grid;\n  grid-template-columns: repeat(10, 1fr);\n  grid-template-rows: repeat(10, 1fr);\n  width: clamp(400px, 30vw, 800px);\n  height: clamp(400px, 30vw, 800px);\n  border: 2px solid black;\n}\n\n.cell {\n  border: 1px solid black;\n}\n\n.computer .cell:hover {\n  background-image: url(${h});\n  background-size: cover;\n  background-size: 80%;\n  background-repeat: no-repeat;\n  background-position: center;\n  cursor: pointer;\n}\n\n.computer .cell.hit:hover {\n  cursor: not-allowed;\n}\n\n.player .cell.ship {\n  background-color: rgb(127, 186, 39);\n  /* border: 2px solid rgb(0, 79, 0); */\n}\n\n.player .cell.movable {\n  background-image: url(${u});\n  background-size: 50%;\n  background-position: 0 0;\n  background-repeat: no-repeat;\n  cursor: move;\n}\n\n.cell.water.hit {\n  background-color: blue;\n  background-size: 120%;\n  background-position: 0 10px;\n  background-repeat: no-repeat;\n}\n\n.cell.ship.hit {\n  border: 2px solid rgb(0, 67, 0);\n  background-color: red;\n  background-size: 80%;\n  background-position: center;\n  background-repeat: no-repeat;\n}\n\n.cell.ship.hit.sunk {\n  border: 2px solid rgb(156, 8, 8);\n  background: url(${g}), rgb(255, 204, 204);\n  background-size: 80%;\n  background-position: center;\n  background-repeat: no-repeat;\n}\n\n@keyframes fadeIn {\n  from {\n      opacity: 0;\n  }\n  to {\n      opacity: 1;\n  }\n}\n\n.restart-game-container {\n  position: absolute;\n  transform: translate(-50%, -50%);\n  top: 50%;\n  left: 50%;\n  backdrop-filter: blur(2px);\n  width: 100vw;\n  height: 100vh;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 2rem;\n\n  animation: fadeIn 0.5s;\n}\n\n.restart-game-container h2 {\n  font-size: 3rem;\n  font-weight: 700;\n}\n\n.restart-game-container button {\n  padding: 1rem 2rem;\n  font-size: 1.5rem;\n  background-color: rgb(0, 0, 0, 0.8);\n  color: white;\n  border-radius: 5px;\n  cursor: pointer;\n\n  transition: background-color 0.3s;\n}\n\n.restart-game-container button:hover {\n  background-color: rgb(0, 0, 0, 0.9);\n}\n\n.start-game-container {\n  position: absolute;\n  transform: translate(-50%, -50%);\n  top: 50%;\n  left: 50%;\n  backdrop-filter: blur(2px);\n  width: 101%;\n  height: 101%;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 20%;\n}\n\n.start-game-container button {\n  padding: 1rem 2rem;\n  font-size: 1.5rem;\n  border-radius: 0.5rem;\n  background-color: rgb(40, 40, 40);\n  color: white;\n\n  transition: background-color 0.3s;\n}\n\n.start-game-container button:hover {\n  background-color: rgb(0, 0, 0);\n}\n\n.valid-move {\n  background-color: green;\n}\n\n.invalid-move {\n  background-color: red;\n}`,"",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAAA;EACE,sBAAsB;AACxB;;AAEA;EACE,qCAAqC;EACrC,yBAAyB;EACzB,gBAAgB;EAChB,kBAAkB;;EAElB,aAAa;EACb,sBAAsB;EACtB,yBAAyB;EACzB,uBAAuB;EACvB,kBAAkB;EAClB,mBAAmB;;EAEnB,kBAAkB;AACpB;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,aAAa;EACb,6BAA6B;AAC/B;;AAEA;EACE,aAAa;EACb,6BAA6B;EAC7B,mBAAmB;EACnB,eAAe;EACf,sBAAsB;EACtB,iBAAiB;AACnB;;AAEA;;EAEE,aAAa;EACb,sBAAsB;EACtB,mBAAmB;;EAEnB,kBAAkB;EAClB,kBAAkB;AACpB;;AAEA;;EAEE,aAAa;EACb,iBAAiB;AACnB;;AAEA;EACE,aAAa;EACb,sCAAsC;EACtC,mCAAmC;EACnC,gCAAgC;EAChC,iCAAiC;EACjC,uBAAuB;AACzB;;AAEA;EACE,uBAAuB;AACzB;;AAEA;EACE,yDAA2C;EAC3C,sBAAsB;EACtB,oBAAoB;EACpB,4BAA4B;EAC5B,2BAA2B;EAC3B,eAAe;AACjB;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,mCAAmC;EACnC,qCAAqC;AACvC;;AAEA;EACE,yDAAyC;EACzC,oBAAoB;EACpB,wBAAwB;EACxB,4BAA4B;EAC5B,YAAY;AACd;;AAEA;EACE,sBAAsB;EACtB,qBAAqB;EACrB,2BAA2B;EAC3B,4BAA4B;AAC9B;;AAEA;EACE,+BAA+B;EAC/B,qBAAqB;EACrB,oBAAoB;EACpB,2BAA2B;EAC3B,4BAA4B;AAC9B;;AAEA;EACE,gCAAgC;EAChC,uEAAuD;EACvD,oBAAoB;EACpB,2BAA2B;EAC3B,4BAA4B;AAC9B;;AAEA;EACE;MACI,UAAU;EACd;EACA;MACI,UAAU;EACd;AACF;;AAEA;EACE,kBAAkB;EAClB,gCAAgC;EAChC,QAAQ;EACR,SAAS;EACT,0BAA0B;EAC1B,YAAY;EACZ,aAAa;;EAEb,aAAa;EACb,sBAAsB;EACtB,uBAAuB;EACvB,mBAAmB;EACnB,SAAS;;EAET,sBAAsB;AACxB;;AAEA;EACE,eAAe;EACf,gBAAgB;AAClB;;AAEA;EACE,kBAAkB;EAClB,iBAAiB;EACjB,mCAAmC;EACnC,YAAY;EACZ,kBAAkB;EAClB,eAAe;;EAEf,iCAAiC;AACnC;;AAEA;EACE,mCAAmC;AACrC;;AAEA;EACE,kBAAkB;EAClB,gCAAgC;EAChC,QAAQ;EACR,SAAS;EACT,0BAA0B;EAC1B,WAAW;EACX,YAAY;;EAEZ,aAAa;EACb,sBAAsB;EACtB,uBAAuB;EACvB,mBAAmB;EACnB,QAAQ;AACV;;AAEA;EACE,kBAAkB;EAClB,iBAAiB;EACjB,qBAAqB;EACrB,iCAAiC;EACjC,YAAY;;EAEZ,iCAAiC;AACnC;;AAEA;EACE,8BAA8B;AAChC;;AAEA;EACE,uBAAuB;AACzB;;AAEA;EACE,qBAAqB;AACvB",sourcesContent:['* {\r\n  box-sizing: border-box;\r\n}\r\n\r\nbody {\r\n  font-family: "Roboto Mono", monospace;\r\n  font-optical-sizing: auto;\r\n  font-weight: 500;\r\n  font-style: normal;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  /* align-items: center; */\r\n  justify-content: center;\r\n  /* margin: -3vw; */\r\n  /* height: 100vh; */\r\n\r\n  position: relative;\r\n}\r\n\r\n.header {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 2rem;\r\n  font-size: calc(2.5rem + 1vw);\r\n}\r\n\r\n.game-container {\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n  /* margin-top: 20vh; */\r\n  /* width: 70vw; */\r\n}\r\n\r\n.player-container,\r\n.computer-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  position: relative;\r\n  /* margin: 2rem; */\r\n}\r\n\r\n.player-container > h4,\r\n.computer-container > h4 {\r\n  padding: 1rem;\r\n  font-size: 1.5rem;\r\n}\r\n\r\n.board {\r\n  display: grid;\r\n  grid-template-columns: repeat(10, 1fr);\r\n  grid-template-rows: repeat(10, 1fr);\r\n  width: clamp(400px, 30vw, 800px);\r\n  height: clamp(400px, 30vw, 800px);\r\n  border: 2px solid black;\r\n}\r\n\r\n.cell {\r\n  border: 1px solid black;\r\n}\r\n\r\n.computer .cell:hover {\r\n  background-image: url("./icons/target.png");\r\n  background-size: cover;\r\n  background-size: 80%;\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  cursor: pointer;\r\n}\r\n\r\n.computer .cell.hit:hover {\r\n  cursor: not-allowed;\r\n}\r\n\r\n.player .cell.ship {\r\n  background-color: rgb(127, 186, 39);\r\n  /* border: 2px solid rgb(0, 79, 0); */\r\n}\r\n\r\n.player .cell.movable {\r\n  background-image: url("./icons/move.png");\r\n  background-size: 50%;\r\n  background-position: 0 0;\r\n  background-repeat: no-repeat;\r\n  cursor: move;\r\n}\r\n\r\n.cell.water.hit {\r\n  background-color: blue;\r\n  background-size: 120%;\r\n  background-position: 0 10px;\r\n  background-repeat: no-repeat;\r\n}\r\n\r\n.cell.ship.hit {\r\n  border: 2px solid rgb(0, 67, 0);\r\n  background-color: red;\r\n  background-size: 80%;\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n}\r\n\r\n.cell.ship.hit.sunk {\r\n  border: 2px solid rgb(156, 8, 8);\r\n  background: url("./icons/fire.png"), rgb(255, 204, 204);\r\n  background-size: 80%;\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n}\r\n\r\n@keyframes fadeIn {\r\n  from {\r\n      opacity: 0;\r\n  }\r\n  to {\r\n      opacity: 1;\r\n  }\r\n}\r\n\r\n.restart-game-container {\r\n  position: absolute;\r\n  transform: translate(-50%, -50%);\r\n  top: 50%;\r\n  left: 50%;\r\n  backdrop-filter: blur(2px);\r\n  width: 100vw;\r\n  height: 100vh;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 2rem;\r\n\r\n  animation: fadeIn 0.5s;\r\n}\r\n\r\n.restart-game-container h2 {\r\n  font-size: 3rem;\r\n  font-weight: 700;\r\n}\r\n\r\n.restart-game-container button {\r\n  padding: 1rem 2rem;\r\n  font-size: 1.5rem;\r\n  background-color: rgb(0, 0, 0, 0.8);\r\n  color: white;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.restart-game-container button:hover {\r\n  background-color: rgb(0, 0, 0, 0.9);\r\n}\r\n\r\n.start-game-container {\r\n  position: absolute;\r\n  transform: translate(-50%, -50%);\r\n  top: 50%;\r\n  left: 50%;\r\n  backdrop-filter: blur(2px);\r\n  width: 101%;\r\n  height: 101%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 20%;\r\n}\r\n\r\n.start-game-container button {\r\n  padding: 1rem 2rem;\r\n  font-size: 1.5rem;\r\n  border-radius: 0.5rem;\r\n  background-color: rgb(40, 40, 40);\r\n  color: white;\r\n\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.start-game-container button:hover {\r\n  background-color: rgb(0, 0, 0);\r\n}\r\n\r\n.valid-move {\r\n  background-color: green;\r\n}\r\n\r\n.invalid-move {\r\n  background-color: red;\r\n}'],sourceRoot:""}]);const m=p},314:n=>{n.exports=function(n){var r=[];return r.toString=function(){return this.map((function(r){var e="",t=void 0!==r[5];return r[4]&&(e+="@supports (".concat(r[4],") {")),r[2]&&(e+="@media ".concat(r[2]," {")),t&&(e+="@layer".concat(r[5].length>0?" ".concat(r[5]):""," {")),e+=n(r),t&&(e+="}"),r[2]&&(e+="}"),r[4]&&(e+="}"),e})).join("")},r.i=function(n,e,t,a,o){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(t)for(var s=0;s<this.length;s++){var d=this[s][0];null!=d&&(i[d]=!0)}for(var l=0;l<n.length;l++){var c=[].concat(n[l]);t&&i[c[0]]||(void 0!==o&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=o),e&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=e):c[2]=e),a&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=a):c[4]="".concat(a)),r.push(c))}},r}},417:n=>{n.exports=function(n,r){return r||(r={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),r.hash&&(n+=r.hash),/["'() \t\n]|(%20)/.test(n)||r.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},354:n=>{n.exports=function(n){var r=n[1],e=n[3];if(!e)return r;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),o="/*# ".concat(a," */");return[r].concat([o]).join("\n")}return[r].join("\n")}},72:n=>{var r=[];function e(n){for(var e=-1,t=0;t<r.length;t++)if(r[t].identifier===n){e=t;break}return e}function t(n,t){for(var o={},i=[],s=0;s<n.length;s++){var d=n[s],l=t.base?d[0]+t.base:d[0],c=o[l]||0,A="".concat(l," ").concat(c);o[l]=c+1;var p=e(A),h={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==p)r[p].references++,r[p].updater(h);else{var u=a(h,t);t.byIndex=s,r.splice(s,0,{identifier:A,updater:u,references:1})}i.push(A)}return i}function a(n,r){var e=r.domAPI(r);return e.update(n),function(r){if(r){if(r.css===n.css&&r.media===n.media&&r.sourceMap===n.sourceMap&&r.supports===n.supports&&r.layer===n.layer)return;e.update(n=r)}else e.remove()}}n.exports=function(n,a){var o=t(n=n||[],a=a||{});return function(n){n=n||[];for(var i=0;i<o.length;i++){var s=e(o[i]);r[s].references--}for(var d=t(n,a),l=0;l<o.length;l++){var c=e(o[l]);0===r[c].references&&(r[c].updater(),r.splice(c,1))}o=d}}},659:n=>{var r={};n.exports=function(n,e){var t=function(n){if(void 0===r[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}r[n]=e}return r[n]}(n);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(e)}},540:n=>{n.exports=function(n){var r=document.createElement("style");return n.setAttributes(r,n.attributes),n.insert(r,n.options),r}},56:(n,r,e)=>{n.exports=function(n){var r=e.nc;r&&n.setAttribute("nonce",r)}},825:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var r=n.insertStyleElement(n);return{update:function(e){!function(n,r,e){var t="";e.supports&&(t+="@supports (".concat(e.supports,") {")),e.media&&(t+="@media ".concat(e.media," {"));var a=void 0!==e.layer;a&&(t+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),t+=e.css,a&&(t+="}"),e.media&&(t+="}"),e.supports&&(t+="}");var o=e.sourceMap;o&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),r.styleTagTransform(t,n,r.options)}(r,n,e)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(r)}}}},113:n=>{n.exports=function(n,r){if(r.styleSheet)r.styleSheet.cssText=n;else{for(;r.firstChild;)r.removeChild(r.firstChild);r.appendChild(document.createTextNode(n))}}},530:(n,r,e)=>{n.exports=e.p+"3a650169276a687b5673.png"},625:(n,r,e)=>{n.exports=e.p+"1ace6199077b21356755.png"},461:(n,r,e)=>{n.exports=e.p+"d149d86ae473665b2ad2.png"}},r={};function e(t){var a=r[t];if(void 0!==a)return a.exports;var o=r[t]={id:t,exports:{}};return n[t](o,o.exports,e),o.exports}e.m=n,e.n=n=>{var r=n&&n.__esModule?()=>n.default:()=>n;return e.d(r,{a:r}),r},e.d=(n,r)=>{for(var t in r)e.o(r,t)&&!e.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:r[t]})},e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),e.o=(n,r)=>Object.prototype.hasOwnProperty.call(n,r),(()=>{var n;e.g.importScripts&&(n=e.g.location+"");var r=e.g.document;if(!n&&r&&(r.currentScript&&(n=r.currentScript.src),!n)){var t=r.getElementsByTagName("script");if(t.length)for(var a=t.length-1;a>-1&&(!n||!/^http(s?):/.test(n));)n=t[a--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),e.p=n})(),e.b=document.baseURI||self.location.href,e.nc=void 0;var t=e(72),a=e.n(t),o=e(825),i=e.n(o),s=e(659),d=e.n(s),l=e(56),c=e.n(l),A=e(540),p=e.n(A),h=e(113),u=e.n(h),g=e(430),m={};m.styleTagTransform=u(),m.setAttributes=c(),m.insert=d().bind(null,"head"),m.domAPI=i(),m.insertStyleElement=p(),a()(g.A,m),g.A&&g.A.locals&&g.A.locals;var b=e(365),f={};f.styleTagTransform=u(),f.setAttributes=c(),f.insert=d().bind(null,"head"),f.domAPI=i(),f.insertStyleElement=p(),a()(b.A,f),b.A&&b.A.locals&&b.A.locals;const C=class{constructor(n){this.length=n,this.timesHit=0,this.hits=[],this.isSunk=!1,this.coordinates=null,this.direction=null}hit(n=null,r=null){if(this.isSunk)throw new Error("Ship is already sunk");this.timesHit++,this.hits.push({x:n,y:r}),this.determineIfSunk()&&(this.isSunk=!0)}isHit(n,r){return this.hits.some((e=>e.x===n&&e.y===r))}determineIfSunk(){return this.timesHit===this.length}},B=class{constructor(){this.board=this.createBoard(10),this.ships=[],this.missedAttacks=[]}createBoard(n){const r=[];for(let e=0;e<n;e++){r[e]=[];for(let t=0;t<n;t++)r[e][t]={hit:!1,ship:null}}return r}placeShip(n,r,e,t){if(!this.canPlaceShip(n,r,e,t))throw new Error("Ship cannot be placed.");switch(this.ships.push(t),t.direction=e,t.coordinates={x:n,y:r},e){case"horizontal":for(let e=0;e<t.length;e++)this.board[n][r+e].ship=t;break;case"vertical":for(let e=0;e<t.length;e++)this.board[n+e][r].ship=t}}canReceiveAttack(n,r){return!this.board[n][r].hit}receiveAttack(n,r){if(!this.canReceiveAttack(n,r))throw new Error("Spot is already hit");this.board[n][r].hit=!0,this.board[n][r].ship?this.board[n][r].ship.hit(n,r):this.missedAttacks.push({x:n,y:r})}allShipsSunk(){return this.ships.every((n=>n.isSunk))}canPlaceShip(n,r,e,t){if("horizontal"===e){if(this.board.length<r+t.length)return!1;for(let e=0;e<t.length;e++)if(this.board[n][r+e].ship)return!1}else if("vertical"===e){if(this.board.length<n+t.length)return!1;for(let e=0;e<t.length;e++)if(this.board[n+e][r].ship)return!1}if("horizontal"===e){if(this.board[n][r-1]&&this.board[n][r-1].ship||this.board[n][r+t.length]&&this.board[n][r+t.length].ship)return!1;for(let e=-1;e<t.length+1;e++){if(this.board[n-1]&&this.board[n-1][r+e]&&this.board[n-1][r+e].ship)return!1;if(this.board[n+1]&&this.board[n+1][r+e]&&this.board[n+1][r+e].ship)return!1}}else if("vertical"===e){if(this.board[n-1]&&this.board[n-1][r]&&this.board[n-1][r].ship||this.board[n+t.length]&&this.board[n+t.length][r]&&this.board[n+t.length][r].ship)return!1;for(let e=-1;e<t.length+1;e++){if(this.board[n+e]&&this.board[n+e][r-1]&&this.board[n+e][r-1].ship)return!1;if(this.board[n+e]&&this.board[n+e][r+1]&&this.board[n+e][r+1].ship)return!1}}return!0}placeShipRandomly(){this.board=this.createBoard(10),this.ships=[];const n=new C(2),r=new C(2),e=new C(3),t=new C(4),a=new C(5),o=[];o.push(n,r,e,t,a),o.forEach((n=>{let r;do{r=[Math.floor(10*Math.random()),Math.floor(10*Math.random()),Math.random()<.5?"horizontal":"vertical"]}while(!this.canPlaceShip(...r,n));this.placeShip(...r,n)}))}},E=class{constructor(n){this.type=n,this.gameBoard=new B}};new class{constructor(n,r){this.player=n,this.computer=r,this.draggedShip=null,this.cellClickHandler=this.cellClickHandler.bind(this),this.dropHandler=this.dropHandler.bind(this),this.dragOverHandler=this.dragOverHandler.bind(this),this.dragStartHandler=this.dragStartHandler.bind(this),this.dragEndHandler=this.dragEndHandler.bind(this),this.dragEnterHandler=this.dragEnterHandler.bind(this)}displayBoardPlayer(){const n=this.player.gameBoard.board,r=document.querySelector(".board.player");r.innerHTML="";for(let e=0;e<n.length;e++)for(let t=0;t<n[e].length;t++){const a=document.createElement("div");a.classList.add("cell"),a.dataset.x=e,a.dataset.y=t,a.addEventListener("dragenter",this.dragEnterHandler),a.addEventListener("dragover",this.dragOverHandler),a.addEventListener("drop",this.dropHandler),n[e][t].hit&&a.classList.add("hit"),n[e][t].ship?(a.classList.add("ship"),n[e][t].ship.isSunk&&a.classList.add("sunk"),document.body.classList.contains("starting-screen")&&(a.classList.add("movable"),a.draggable=!0,a.addEventListener("dragstart",this.dragStartHandler),a.addEventListener("dragend",this.dragEndHandler))):a.classList.add("water"),r.appendChild(a)}}dragStartHandler(n){n.target.classList.add("dragging");const r=this.player.gameBoard.board,e=Number(n.target.dataset.x),t=Number(n.target.dataset.y);this.draggedShip=r[e][t].ship;const a=this.draggedShip;for(let n=0;n<a.length;n++)"horizontal"===a.direction?(document.querySelector(`.cell[data-x="${a.coordinates.x}"][data-y="${a.coordinates.y+n}"]`).classList.remove("ship","movable"),this.player.gameBoard.board[a.coordinates.x][a.coordinates.y+n].ship=null):(document.querySelector(`.cell[data-x="${a.coordinates.x+n}"][data-y="${a.coordinates.y}"]`).classList.remove("ship","movable"),this.player.gameBoard.board[a.coordinates.x+n][a.coordinates.y].ship=null)}dragOverHandler(n){n.preventDefault()}dragEnterHandler(n){const r=document.querySelectorAll(".valid-move, .invalid-move");r&&r.forEach((n=>n.classList.remove("valid-move","invalid-move")));const e=Number(n.target.dataset.x),t=Number(n.target.dataset.y),a=[];if(this.draggedShip){for(let n=0;n<this.draggedShip.length;n++)"horizontal"===this.draggedShip.direction?t+n<10&&a.push(document.querySelector(`.player .cell[data-x="${e}"][data-y="${t+n}"]`)):e+n<10&&a.push(document.querySelector(`.player .cell[data-x="${e+n}"][data-y="${t}"]`));this.player.gameBoard.canPlaceShip(e,t,this.draggedShip.direction,this.draggedShip)?a.forEach((n=>{n.classList.add("valid-move")})):a.forEach((n=>{n.classList.add("invalid-move")}))}}dropHandler(n){n.preventDefault(),document.querySelector(".dragging")&&document.querySelector(".dragging").classList.remove("dragging");const r=document.querySelectorAll(".valid-move, .invalid-move");if(r&&r.forEach((n=>n.classList.remove("valid-move","invalid-move"))),!this.draggedShip)return;const e=new C(this.draggedShip.length);e.direction=this.draggedShip.direction;const t=Number(n.target.dataset.x),a=Number(n.target.dataset.y);this.player.gameBoard.canPlaceShip(t,a,e.direction,e)?(this.player.gameBoard.placeShip(t,a,e.direction,e),this.player.gameBoard.ships=this.player.gameBoard.ships.filter((n=>this.draggedShip!==n))):this.player.gameBoard.placeShip(this.draggedShip.coordinates.x,this.draggedShip.coordinates.y,this.draggedShip.direction,this.draggedShip),this.draggedShip=null,this.displayBoardPlayer()}dragEndHandler(n){if(n.target.classList.contains("dragging")){n.target.classList.remove("dragging");const r=Number(n.target.dataset.x),e=Number(n.target.dataset.y);this.player.gameBoard.ships=this.player.gameBoard.ships.filter((n=>this.draggedShip!==n));const t=new C(this.draggedShip.length);this.player.gameBoard.placeShip(r,e,this.draggedShip.direction,t),this.draggedShip=null,this.displayBoardPlayer()}}displayBoardComputer(){const n=this.computer.gameBoard.board,r=document.querySelector(".board.computer");r.innerHTML="";for(let e=0;e<n.length;e++)for(let t=0;t<n[e].length;t++){const a=document.createElement("div");a.classList.add("cell"),a.dataset.x=e,a.dataset.y=t,a.addEventListener("click",this.cellClickHandler),n[e][t].hit&&(a.classList.add("hit"),n[e][t].ship?(a.classList.add("ship"),n[e][t].ship.isSunk&&a.classList.add("sunk")):a.classList.add("water")),r.appendChild(a)}}displayBoardComputerEmpty(){const n=this.computer.gameBoard.board,r=document.querySelector(".board.computer");r.innerHTML="";for(let e=0;e<n.length;e++)for(let t=0;t<n[e].length;t++){const n=document.createElement("div");n.classList.add("cell"),n.classList.add("unclickable"),r.appendChild(n)}}async cellClickHandler(n){const r=n.target.dataset.x,e=n.target.dataset.y,t=this.computer.gameBoard.board;if(t[r][e].hit)return;if(this.computer.gameBoard.receiveAttack(r,e),this.displayBoardComputer(),this.computer.gameBoard.allShipsSunk())return void this.finalizeGame("Player");if(t[r][e].ship)return;const a=n=>new Promise((r=>setTimeout(r,n))),o=this.player.gameBoard.board;let i,s;do{if(i=[Math.floor(10*Math.random()),Math.floor(10*Math.random())],s=!1,o[i[0]][i[1]].hit)s=!0;else if(await a(300),this.player.gameBoard.receiveAttack(...i),this.displayBoardPlayer(),this.player.gameBoard.allShipsSunk()){this.finalizeGame("Computer");break}}while(o[i[0]][i[1]].ship||s)}finalizeGame(n){document.querySelectorAll(".cell").forEach((n=>{n.removeEventListener("click",this.cellClickHandler)}));const r=document.createElement("div");r.classList.add("restart-game-container");const e=document.createElement("h2");e.textContent=`${n} won!`;const t=document.createElement("button");t.textContent="Play Again",t.addEventListener("click",(()=>{this.player.gameBoard=new B,this.computer.gameBoard=new B,this.player.gameBoard.placeShipRandomly(),this.computer.gameBoard.placeShipRandomly(),this.displayBoardPlayer(),this.startingScreen(),r.remove()})),r.append(e,t),document.body.appendChild(r)}startingScreen(){document.body.classList.add("starting-screen"),this.player.gameBoard.placeShipRandomly(),this.computer.gameBoard.placeShipRandomly(),this.displayBoardPlayer(),this.displayBoardComputerEmpty();const n=document.createElement("div");n.classList.add("start-game-container");const r=document.createElement("button");r.classList.add("randomize-ships"),r.textContent="Randomize Ships",r.addEventListener("click",(()=>{this.player.gameBoard.placeShipRandomly(),this.displayBoardPlayer()}));const e=document.createElement("button");e.classList.add("start"),e.textContent="Start",e.addEventListener("click",(()=>{document.body.classList.remove("starting-screen"),this.displayBoardPlayer(),this.displayBoardComputer(),n.remove()}));const t=document.querySelector(".computer-container");n.append(r,e),t.appendChild(n)}}(new E("player"),new E("computer")).startingScreen()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,